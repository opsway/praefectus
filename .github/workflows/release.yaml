name: Create new release on merging to master
on:
  pull_request:
    branches:
      - 'master'
    types: ['closed']
jobs:
  build:
    name: Build Praefectus binary
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged && github.event.action == 'closed'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup environment variables
        run: |
          echo "RELEASE_VERSION=$(date +'%Y%m%d.%H')" >> $GITHUB_ENV
          echo "RELEASE_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "RELEASE_BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%S%z")" >> $GITHUB_ENV
      - name: Build binary
        run: |
          mkdir ./bin
          docker build --tag=appimg \
            --build-arg="RELEASE_VERSION=$RELEASE_VERSION" \
            --build-arg="RELEASE_COMMIT=$RELEASE_COMMIT" \
            --build-arg="RELEASE_BUILD_TIME=$RELEASE_BUILD_TIME" .
          CONTAINER_ID=$(docker create appimg)
          docker cp $CONTAINER_ID:/praefectus ./bin/
          docker rm -f -v $CONTAINER_ID
          bin/praefectus version
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          prerelease: false
          draft: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_content_type: application/octet-stream
          asset_path: ./bin/praefectus
          asset_name: praefectus
